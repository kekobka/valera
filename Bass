if CLIENT then
    local soundParent = chip()
    Musicsafe = {}
        permissionSatisfied = hasPermission("bass.loadURL","https://ruy.zvukofon.com/music/") 
    if not permissionSatisfied then setName("[Music] Playing: PRESS E") setupPermissionRequest({ "bass.loadURL","material.urlcreate" }, "See an example of bass.loadURL.", true) end
    
    hook.add("permissionrequest", "bassrqu", function()
        permissionSatisfied = hasPermission("bass.loadURL","https://ruy.zvukofon.com/music/")
        hook.remove("permissionrequest","bassrqu")
        setName(CNam)
    end)
    local succes,Music,MusicNames,MusicNames1,Volume,Pitch = true,{},{},{},1,1
    
    function sendBass(name,mus)
        print(name)
        net.start("bass")
        net.writeString(mus)
        net.writeString(name)
        net.send() 
    end
    
    function nextMusic()
        if replay or next or #Musicsafe < 2 then return end
        next = true
        albomID = albomID or 0
        albomID = albomID + 1
        if albomID > #Musicsafe then albomID = 1 end
        sendBass(
        MusicNames1[math.clamp(albomID,1,#Musicsafe)],
        Musicsafe[math.clamp(albomID,1,#Musicsafe)]
        )
    end
    
    function randChar()
        local RandChar = ""
        for i = 1 ,4 do
            RandChar = RandChar..table.random(string.toTable("qwertyuiopasdfghjklzxcvbnm"))
        end
        return RandChar
    end
    
    function setSound(check,name)
        if not succes or not permissionSatisfied or bass.soundsLeft() < 1 then return end
        setName(CNam)
        succes = false
        lastS = lastS or ""
        if lastS == check then setName("[Music] Playing: "..name) succes = true if not Online then sound:setTime(0) end return end
        if player() == owner() then notification.addProgress("loading", "Loading sound...") end
        bass.loadURL(check,"3d noblock",function(snd,err,name1)
            if not isValid(snd) then next = false succes = true print("sound error") if player() == owner() then notification.addProgress("loading", "Failed!") notification.kill("loading") end return end
            if isValid(sound) then sound:stop() end
            if player() == owner() then notification.addProgress("loading", "Loaded!") notification.kill("loading") end
            Online = snd:getLength() < 0.1
            lastS = check
            setName("[Music] Playing: "..name)
            Pause,succes,sound,next = false,true,snd,false
            hook.add("think","setMusic",setMusicPos)
            snd:setPos(soundParent:getPos())
            snd:setVolume(Volume)
            snd:setPitch(Pitch)
            if replay and Online then replay = false end
            snd:setLooping(replay)
        end)
    end
    
    function updateMyMusic()
        checkMyMusic()
        local data = getTableData()
        Musicsafe,musicCovers1,MusicNames1 = {},{},{}
        for id,Music in pairs(data) do
            table.insert(Musicsafe,id,getHttp(id))
            table.insert(musicCovers1,id,getCover(id))
            table.insert(MusicNames1,id,id..": "..getName(id))
            printConsole(id..": "..getName(id))
        end
    end
    
    function setMusicPos()
        if not D2 then 
            musvol, musPos = Volume-(eyePos()):getDistance(soundParent:getPos())/(fade/Volume), soundParent:getPos()
        else
            musvol, musPos = Volume-(eyePos()):getDistance(soundParent:getPos())/(fade/Volume),eyePos()+eyeVector()*50
        end
        if isValid(sound) and isValid(soundParent) then sound:setVolume(musvol) sound:setPos(musPos) else hook.remove("think","setMusic") end
        if player() == owner() and sound:getTime() >= sound:getLength()-1 then if sound:getLength()<0.1 then return end nextMusic() end 
    end
    
    MusicData = {}


    net.receive("client",function()
        local basss = net.readString()
        local name = net.readString()
        setSound(basss,name)
    end)

net.receive("get",function()
        sthin = net.readString()
        sound = sound or nil
        --if sthin == commands[1] and isValid(sound) then sound:stop() return end
        if sthin == commands[1] and isValid(sound) and not Pause then sound:pause() Pause = true print("Paused") return end
        if sthin == commands[4] and isValid(sound) and Pause then sound:play() Pause = false print("Play")  return end
        if sthin:sub(1,commands[2]:len()) == commands[2] and isValid(sound) then if tonumber(sthin:sub(commands[2]:len())) == nil then return end Volume = math.clamp(tonumber(sthin:sub(commands[2]:len()))/10,0,10) sound:setVolume(tonumber(sthin:sub(commands[2]:len()))/10) print("Volume: "..Volume*10 .."%") return end
        if sthin:sub(1,commands[3]:len()) == commands[3] and isValid(sound) then if tonumber(sthin:sub(commands[3]:len())) == nil then return end Pitch = tonumber(sthin:sub(commands[3]:len()))/100 sound:setPitch(tonumber(sthin:sub(commands[3]:len()))/100) print("Pitch: "..Pitch*100 .."%") return end
        if sthin:sub(1,commands[5]:len()) == commands[5] and isValid(sound) and not Online then if tonumber(sthin:sub(commands[5]:len())) == nil then return end sound:setTime(math.clamp(sound:getTime()+(tonumber(sthin:sub(commands[5]:len()))),0,sound:getLength())) return end
        if sthin:sub(1,commands[11]:len()) == commands[11] and isValid(sound) and not Online then replay = !replay if replay then sound:setLooping(replay) print("повтор включен!") else sound:setLooping(replay) print("повтор выключен!") end return end
        if sthin:sub(1,commands[12]:len()) == commands[12] then D2 = !D2 if D2 then print("2D звук вкл!") else print("2D звук выкл!") end return end
        if sthin:sub(1,commands[13]:len()) == commands[13] then setSound(sthin:sub(commands[13]:len()+1),"URL RADIO") return end
        if sthin:sub(1,commands[14]:len()) == commands[14] then sthin = commands[15]..urlEncode(randChar()) end
        if player()==owner() then
            
            if sthin:sub(1,commands[6]:len()) == commands[6] and #Musicsafe > 0 then 
                if tonumber(sthin:sub(commands[6]:len())) == nil then sthin = commands[6]..tostring(math.random(1,#Musicsafe)) end
                albomID = math.clamp(tonumber(sthin:sub(commands[6]:len())),1,#Musicsafe)
                sendBass(
                MusicNames1[math.clamp(tonumber(sthin:sub(commands[6]:len())),1,#MusicNames1)],
                Musicsafe[math.clamp(tonumber(sthin:sub(commands[6]:len())),1,#Musicsafe)]
                )
            return end
            if sthin:sub(1,commands[7]:len()) == commands[7] then MusicData = {} updateMyMusic() return end
            if sthin:sub(1,commands[8]:len()) == commands[8] and #MusicData > 0 then
                if tonumber(sthin:sub(commands[8]:len())) > #MusicData then print("Invalid ID") return end
                addMusic(MusicData[math.clamp(tonumber(sthin:sub(commands[8]:len())),1,#MusicData)])
                print("Добавлен: "..MusicNames1[math.clamp(tonumber(sthin:sub(commands[8]:len())),1,#MusicNames1)])
            return end
            if sthin:sub(1,commands[9]:len()) == commands[9] and #getTableData() > 0 then
                if tonumber(sthin:sub(commands[9]:len())) > #getTableData() then print("Invalid ID") return end
                print("Удален: "..getName(math.clamp(tonumber(sthin:sub(commands[9]:len())),1,#getTableData())))
                removeMusic(math.clamp(tonumber(sthin:sub(commands[9]:len())),1,#getTableData()))
                updateMyMusic()
            return end
            if sthin:sub(1,commands[10]:len()) == commands[10] and #Musicsafe > 0 then nextMusic() return end
            --if owner():getSteamID() != "STEAM_0:0:186583728" then error("YOU ARE NOT THE OWNER") end 
            function finder(txt,from,to,number,subFrom,subTo,pattern)
                local F = string.find(txt,from,number,pattern)
                if not F then return nil,"" end
                local F2 = string.find(txt,to,F,pattern)
                return F, string.sub(txt,F+subFrom,F2+subTo)
            end
            if sthin:sub(1,commands[15]:len()) == commands[15] then
                if not http.canRequest() then return end
                http.get("https://ruy.zvukofon.com/music/"..urlEncode(sthin:sub(commands[15]:len()+1)), function(pars)
                    MusicData,Music,MusicNames,Musicnames2,musicCovers,patternSAFE,patternSAFE2,numbF,numbF2,numbF3,numbF4 = {},{},{},{},{},string.patternSafe("mp3"),string.patternSafe("class"),0,0,0,0            
                    
                    for id = 1,50 do
                        if numbF == nil then continue end
                         numbF, HTTPMusic = finder(pars,'href="/dl/','class="topcharts__item-info-btn topcharts__item-info-btn_download text-hide d-block"',numbF + 50,6,-3,patternSAFE)
                        if HTTPMusic == "" then continue end
                         numbF2, NameMusic = finder(pars,'topcharts__item-title-track','</span>',numbF2 + 500,29,-1,patternSAFE2)
                         numbF3, ArtistMusic = finder(pars,'topcharts__item-title-artist','</span>',numbF3 + 50,30,-1,patternSAFE2)
                        if numbF4 == nil then continue end
                         numbF4, CoverMusic = finder(pars,"style=\"background-image: url('/cover",".jpg');",numbF4 + 50,30,3,patternSAFE2)
                        if CoverMusic then
                            CoverMusic = string.replace(string.replace(CoverMusic,"75", "300"),"150", "300")
                            table.insert(musicCovers,id,"https://ruy.zvukofon.com"..CoverMusic)
                        end
                        
                        pars = string.replace(pars,HTTPMusic, " ")
                        table.insert(Music,id,"https://ruy.zvukofon.com"..HTTPMusic)
                        table.insert(Musicnames2,id,id..": "..ArtistMusic.." - "..NameMusic)
                        printConsole(id..": "..ArtistMusic.." - "..NameMusic)
                        table.insert(MusicData,id,(ArtistMusic or "").." - "..(NameMusic or "").."@#"..(musicCovers[id] or "").."@#"..(Music[id] or ""))
                    end 
                    
                    if #Music == 0 then print("no music") return end
                    print("Founded!")
                    print("Check console!")
                    Musicsafe,MusicNames1,musicCovers1 = Music,Musicnames2,musicCovers
                    albomID = 1
                    sendBass(
                    MusicNames1[math.clamp(1,1,#MusicNames1)],
                    Musicsafe[math.clamp(1,1,#Musicsafe)]
                    )
                    
                end)
            end
        end
    end)
end
